Front-end developement : ==> mostly focused on what the user see ==> client side .
==> front-end languages ==> HTML / CSS / JS /==> main work is creating and redesigning websites 
=======================>

What is the backe-end : 
Back end development refers to the server side of an application 
and everything that communicates between the database and the browser.
Where we primarily focused on how the website works .
Adding, updating,deleting, ==> making changes
Monitoring the functionality of the website . 

=======================>
The backend consist of three parts :
Server ==> Application ==> Database .
The server. ==> listening for incoming requests ==> This is the computer that receives requests.==> 
The app. This is the application running on the server that listens for requests, retrieves information from the database, and sends a response.
The database. Databases are used to organize and persist, store data.
Request response cycle ; 
======================>

Tech stack :
Java(spring-Boot), PHP(laravel, symphony, cakephp, codigniter), Ruby on Rails, Python(Django), javascript(node js, express )
======================>

Th backend dev mainly focus on : 
Site responsiviness and speend ==> 
these languages are for craeting dynamic websites . ==> store data in the database .

======================>
*Backend is the code that runs on the server => recieve request from the client .
*The clients are anything that send requests to the back-end .(App runing on another server, Browser, )
*contains the logic to send the appropriate data back to the client .

======================>
What is HTTP ?
set of rules . ==> to establish a connection . 
HTTP stands for Hypertext Transfer Protocol and is used to structure requests and responses over the internet. 
HTTP requires data to be transferred from one point to another over the network.

======================>
HTTP verbs .
GET — retrieve a specific resource (by id) or a collection of
 resources( corresponds to any entity on the web, including HTML files, stylesheets, images, videos, and scripts)
POST — create a new resource
PUT — update a specific resource (by id)
DELETE — remove a specific resource by id
======================>
What is an API with example?
APIs are mechanisms that enable two software components to communicate with each other using a set of definitions and protocols.
JSON is a text-based data format that is used to store and transfer data.
{
"name":"nadir", 
"job" :"Nothing"
}
advantages :
Self-describing
Easy to manipulate
It can be used with various modern programming languages such as Python, Ruby, Java, etc.
*======================>
REST API ==> it's an api that follows a set of rules for an application and server to communicate with each other . 
================================================================================================================================================

Api ??
=============================================>
Back-end developers are the experts who build and maintain the mechanisms that process data and perform actions on websites. Unlike front-end developers, who control everything you can see on a website,
 back-end developers are involved in data storage, security, and other server-side functions that you cannot see.
====================================>
history 
his story . 
skills ==> enough knowledge in databases ==> 
networking ==> web ==> protocolo ==> http == ftp == websockets ==> 
whu oop ==> we handle data as objects 
functional =++ actions .
==> design patterns ==> creational ==> behavioral ==> signlton

==========> solution commun probleme .
multitendancy architecture ==> tenant . 
sigbnle softaware aplication ==> service many client . 
not each client ==> create his own app . ==> addapte business as he want ==> at end one software that serve many client . 
db schema . 
what is tenant . 
cleint == tenant ===> organization ; User ; many user ==> each one with his role ==>
VPS ==> 
sois en bone santé
==========>
=======>Whta is framework ============<
A framework can include support programs, compilers, code libraries, toolsets, and APIs to develop software and create systems. 
Open-source frameworks are always being updated and improved.
The dictionary definition of framework as a “basic structure underlying a system” is not far off from understanding what is a framework in programming. Whether the system is a house, a car, a theory, or a mobile app, the concept of the framework is the same: it provides the support and basic ‘guide’ of the structure being built.

A framework in programming is a tool that provides ready-made components or solutions that are 
customized in order to speed up development. A framework may include a library, 
but is defined by the principle of inversion of control (IoC). With traditional programming,
 the custom code calls into the library to access reusable code.
 With IoC, the framework calls on custom pieces of code when necessary.
 =====>backend arcitecture ; ==========>
 example ==>
 For example, if a website designer creates a site that allows users to enter values
  for variables in financial formulas to calculate simple and compound interest, the backend of the website calculates the answer after users type numbers into fields on the website. 
  Although the user can't see any of the code, servers, networks or databases that process the calculation,
  all of these elements work together in the backend design to determine the correct number and make it appear on the screen in the right place.



  =========>
  
meals ==> title + price +image + description .

business logic ==> presentation logic . 


instead of buying a computer . rent one . 
Companies ==>
AWS : amazon web server 
GCP : google cloud platform 
MZ  : Microsoft Azure .

IAAS ==> Infrastructure as a service .==> pay for what you use . 
SAAS ==> Software As A Service .==> Pay as you go model .
PAAS ==> Platform As a service .


Iaas ==> infrastructure as a service 

=